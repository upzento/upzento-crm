[phases.setup]
nixpkgs = ["nodejs", "nodePackages.npm", "postgresql"]
cmds = [
  "node --version",
  "npm --version"
]

[phases.install]
# Use a custom directory for npm cache
env = { NPM_CONFIG_CACHE = "/tmp/npm-cache" }
cmds = [
  "mkdir -p /tmp/npm-cache",
  "cd backend && npm ci --no-fund --prefer-offline --no-audit --cache=/tmp/npm-cache || npm install --no-fund --prefer-offline --no-audit --cache=/tmp/npm-cache",
  "cd ../frontend && npm ci --no-fund --prefer-offline --no-audit --cache=/tmp/npm-cache || npm install --no-fund --prefer-offline --no-audit --cache=/tmp/npm-cache"
]

[phases.build]
# Skip the cache during build as well
env = { NPM_CONFIG_CACHE = "/tmp/npm-cache", NEXT_TELEMETRY_DISABLED = "1" }
cmds = [
  # Fix encoding issues in both backend and frontend files
  "node fix-frontend-encoding.js",
  # Generate Prisma client and build backend
  "cd backend && NODE_ENV=development npx prisma generate",
  "cd backend && npm run build || true",
  # Make frontend build script executable and run it
  "chmod +x frontend/build.sh",
  "./frontend/build.sh || echo 'Frontend build had errors but continuing deployment'"
]

[start]
cmd = "cd backend && node dist/main.js" 