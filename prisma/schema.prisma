// This is the Prisma schema file for Upzento CRM
// Learn more about Prisma: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Multi-tenancy models

model Tenant {
  id          String    @id @default(uuid())
  name        String
  domain      String?   @unique
  plan        String    @default("free")
  status      String    @default("active")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relationships
  agencies    Agency[]
  users       User[]
}

model Agency {
  id          String    @id @default(uuid())
  name        String
  logo        String?
  primaryColor String?
  tenantId    String
  tenant      Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relationships
  clients     Client[]
  users       User[]
}

model Client {
  id          String    @id @default(uuid())
  name        String
  logo        String?
  primaryColor String?
  agencyId    String
  agency      Agency    @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relationships
  users       User[]
}

// User management models

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  password    String
  firstName   String
  lastName    String
  role        Role      @default(CLIENT_USER)
  tenantId    String?
  agencyId    String?
  clientId    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relationships
  tenant      Tenant?   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  agency      Agency?   @relation(fields: [agencyId], references: [id], onDelete: SetNull)
  client      Client?   @relation(fields: [clientId], references: [id], onDelete: SetNull)
}

enum Role {
  SUPER_ADMIN
  ADMIN
  AGENCY_OWNER
  AGENCY_ADMIN
  AGENCY_USER
  CLIENT_OWNER
  CLIENT_ADMIN
  CLIENT_USER
}

// Shop module enums
enum ShopWidgetType {
  FULL_SHOP
  PRODUCT_LIST
  FEATURED_PRODUCTS
  PRODUCT_CATEGORIES
  SINGLE_PRODUCT
  CART
}

// Analytics module enums
enum AnalyticsWidgetType {
  BAR_CHART
  LINE_CHART
  PIE_CHART
  AREA_CHART
  TABLE
  METRIC
  CUSTOM
}

// Campaign module enums
enum CampaignStatus {
  DRAFT
  SCHEDULED
  RUNNING
  PAUSED
  COMPLETED
  CANCELLED
}

enum MessageType {
  EMAIL
  SMS
  PUSH
  SOCIAL
}

enum CampaignMessageStatus {
  DRAFT
  SCHEDULED
  SENDING
  SENT
  FAILED
}

enum CampaignRecipientStatus {
  PENDING
  SENT
  OPENED
  CLICKED
}

// Chat module enums
enum ChatWidgetType {
  BUBBLE
  EMBEDDED
  POPUP
}

// Integration module enums
enum AnalyticsIntegrationType {
  GOOGLE_ANALYTICS
  FACEBOOK_PIXEL
  HOTJAR
  MIXPANEL
  CUSTOM_API
}

// Payment module enums
enum InvoicePaymentStatus {
  PENDING
  PAID
  OVERDUE
  CANCELLED
  REFUNDED
} 